from scipy.spatial.transform import Rotation as R
import pdb

pdb.set_trace()

quaternion = np.array([-0.4841053053642641, 0.5138585519760546, -0.512981901894092, 0.4883042189131335])
quaternion = np.array([0.5421339626216997, 0.5129660000765407, -0.4484036691403312, -0.49182395106283366])
quaternion = np.array([-0.729692263978838, -0.3502010787206059, 0.2061388397841371, 0.5499228883078167])
quaternion = np.array([0.3554054976378656, 0.7467838226681444, -0.5026348038728758, -0.25171235246926266])
quaternion = np.array([-0.4841053053642641, 0.5138585519760546, -0.512981901894092, 0.4883042189131335])
quaternion = np.array([-0.4841053053642641, 0.5138585519760546, -0.512981901894092, 0.4883042189131335])
rotation = R.from_quat(quaternion)
euler_angles = rotation.as_euler('xyz', degrees=False)




euler_angles = [-1.5676133952210682, 0.005164100136054506, -1.6252260099134739]
euler_angles = [-1.685151396396821, -0.018389250241255928, 1.4991228044127942] #
euler_angles = [-1.8873486978372855, -0.08443162285879513, 0.8337196701479528]
euler_angles = [-1.9477206547808985, -0.018672165367220384, 2.24051296777129] #
euler_angles = [-1.808726813895398, 0.013299534795518264, -0.9100560677684173] 
euler_angles = [-1.9667979540046674, 0.017943931530658208, -2.2482586326488967] 
rotation = R.from_euler('xyz', euler_angles)
quaternion = rotation.as_quat()


print("四元数:", quaternion)
